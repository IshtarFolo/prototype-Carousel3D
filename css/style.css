/*Remise à 0*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Le Carousel */
.carousel {
    width: 700px;
    height: 140px;
    perspective: 1000px;
    transform-origin: 50% 50%;
}

/* Conteneur des cartes */
#spinner {
    width: 100%;
    height: 100%;
    margin-top: 10rem;
    display: flex;
    justify-content: center;
    align-items: center;
    transform-style: preserve-3d;
}

/* Conteneur des boutons */
#boutons {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Les cartes */
.flip-card {
    position: absolute;
    width: 190px;
    height: 120px;
    transform-style: preserve-3d;
    perspective: 1000px;

    transform: rotateY(45deg);
    transition: transform 1s;
}

/* Positionnement de l'avant et arrière des cartes */
.inner-flip {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 1s;
    transform-style: preserve-3d;
}

/* Hover sur la carte */
 .flip-card:hover .inner-flip {
    transform: scale(1.2);
    cursor: pointer;
  } 

/* Le devant et l'arrière des cartes */
.front-flip, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    font-size: 12px;
    transition: transform 1s;
}

/* Le dos de la carte */
.flip-card-back {
    width: 150px;
    height: 150px;
    background-color: skyblue;
    transform: rotateY(180deg) translateX(-20px);
}

/* Le devant est visible dans l'état normal */
.front-flip {
    backface-visibility: visible;
}

/* L'arrière est invisible dans l'état normal (caché derrière le devant) */
.flip-card-back {
    backface-visibility: hidden;
}

  /* Pour debugger (voir une des images tourner pour s'assurer que la rotation soit bonne) */
  .carousel .no1 .image:nth-child(1) {
    border: 3px solid blue;
}


/* 
    Calcul pour obtenir la moitié du rectangle en face de l'usager, le milieu est l'endroit où l'image s'arrête après un click :

    1- rotation Y = 360deg / 8 images --> [45deg] (angle d'un triangle de l'octogone) 
    2- translate Z = 45deg / 2 (séparation d'un triangle en 2 pour obtenir l'angle des 2 triangles rectangles obtenus)--> [22.5deg]
    3- width = 210px (largeur d'un panneau de l'octogone) / 2 --> [105px] 
    4- tan(22.5deg) = 105px/ r ("rayon" qui part du centre de l'octogone et se rend au panneau faisant face à l'utilisateur) -->
       r = 105px/22.5tan = 253px

    Références: https://www.sitepoint.com/building-3d-rotating-carousel-css-javascript/ 
                https://3dtransforms.desandro.com/carousel
*/

.flip-card.no1 {transform: rotateY(0deg) translateZ(253px);}
.flip-card.no2 {transform: rotateY(45deg) translateZ(253px);}
.flip-card.no3 {transform: rotateY(90deg) translateZ(253px);}
.flip-card.no4 {transform: rotateY(135deg) translateZ(253px);}
.flip-card.no5 {transform: rotateY(180deg) translateZ(253px);}
.flip-card.no6 {transform: rotateY(225deg) translateZ(253px);}
.flip-card.no7 {transform: rotateY(270deg) translateZ(253px);}
.flip-card.no8 {transform: rotateY(315deg) translateZ(253px);}